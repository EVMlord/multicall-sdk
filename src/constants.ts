/** All supported chain IDs */
export enum ChainId {
  MAINNET = 1,
  ROPSTEN = 3,
  RINKEBY = 4,
  GÃ–RLI = 5,
  KOVAN = 42,
  BASE = 8453,
  MATIC = 137,
  MATIC_TESTNET = 80001,
  POLYGON_ZKEVM = 1101,
  FANTOM = 250,
  FANTOM_TESTNET = 4002,
  BSC = 56,
  BSC_TESTNET = 97,
  ARBITRUM = 42161,
  ARBITRUM_TESTNET = 79377087078960,
  MOONBEAM_TESTNET = 1287,
  AVALANCHE = 43114,
  AVALANCHE_TESTNET = 43113,
  ZKSYNC_ERA = 324,
  LINEA = 59144,
  SCROLL = 534352,
  CELO = 42220,
  GNOSIS = 100,
  MOONBEAM = 1284,
  HECO = 128,
  HECO_TESTNET = 256,
  HARMONY = 1666600000,
  HARMONY_TESTNET = 1666700000,
  OKEX = 66,
  OKEX_TESTNET = 65,
  CRONOS = 25,
  CRONOS_TESTNET = 338,
  AURORA = 1313161554,
  AURORA_TESTNET = 1313161555,
  AURORA_BETANET = 1313161556,
  MOONRIVER = 1285,
  OPTIMISM = 10,
  XRPLEVM_TESTNET = 1449000,
  MANTLE = 5000,
  KAVA = 2222,
  METIS = 1088,
  ZORA = 7777777,
  MONAD_TESTNET = 10143,
  APECHAIN = 33139,
  OPBNB = 204,
  CORE = 1116,
  AIOZ = 168,
  GRAVITY = 1625,
  LISK = 1135,
  SONIC = 146,
}

export enum VERSION {
  V1,
}

/**
 * Map exactly the values in ChainId to on-chain contract addresses.
 *
 * We use Partial<> here because we may not deploy a given contract on every network.
 */
export type AddressType = Partial<Record<ChainId, string>>;

export const addresses = {
  Multicall: <AddressType>{
    // Mainnets
    [ChainId.MAINNET]: "0x2c7002B316507F228BC6E10855856Ba93114EbB8",
    [ChainId.BSC]: "0x134f94adA24A7ed01AF204D72e7FcFf97E5538da",
    [ChainId.ARBITRUM]: "0x2697B961c5504190502533b69177f3912d3D450B",
    [ChainId.MATIC]: "0x5bE2bE1DFC48935FDA90C6A84D67089896F49aed",
    [ChainId.OPTIMISM]: "0x9E4096d2CE10C37288dEEa27f779774F9C4Cb15B",
    [ChainId.BASE]: "0xc80CA59256a07f72e2CF8d16Ddc11629B34e0820",
    [ChainId.AVALANCHE]: "0x82049c5eB881856909d084BE3edB5AFEaD9d2ebe",
    [ChainId.ZKSYNC_ERA]: "0x3A3CD02b704bB1A54dd37170b75708cAAFeD5Af0",
    [ChainId.LINEA]: "0xB77E3Cb8b2441C53A306bE3220633BBd4d168710",
    [ChainId.SCROLL]: "0x51a60977d4E88843086B85118e0f8673b985EBAF",
    [ChainId.MANTLE]: "0x00D5fB018BC973f4D7b4B46E06CF834D6105ba0e",
    [ChainId.APECHAIN]: "0x354Fe27D768744D4AA74E39aec4B93135Fd6278C",
    [ChainId.METIS]: "0x1f88Aec1f343569e3a041dA875c41d9839DbEcf9",
    [ChainId.ZORA]: "0xA7f3d2dEa7a53E7A9FEbBdE5Cf7C69d39D065030",
    [ChainId.KAVA]: "0x9ecb8f928c49c24922290EB433F285df0766f623",
    [ChainId.CRONOS]: "0x226A09E64e41CB24d0B0dFBeB6DcBb930E6E1eC7",
    [ChainId.OPBNB]: "0x52AE8dfcaa1b918D849f470AA6F208BF621eEf8c",
    [ChainId.CORE]: "0x58bf0BC53Df83D493da0289fC4d7044885516E4B",
    [ChainId.AIOZ]: "0x1BD8CD51e9E0fA901e3E568534382148665a7145",
    [ChainId.GRAVITY]: "0x00D5fB018BC973f4D7b4B46E06CF834D6105ba0e",
    [ChainId.LISK]: "0x226A09E64e41CB24d0B0dFBeB6DcBb930E6E1eC7",
    [ChainId.SONIC]: "0x1BD8CD51e9E0fA901e3E568534382148665a7145",

    // Testnets
    [ChainId.BSC_TESTNET]: "0x06084aF049CA61B1FC7E65a95dB09695E4014d5a",
    [ChainId.MONAD_TESTNET]: "0x1BD8CD51e9E0fA901e3E568534382148665a7145",
    [ChainId.XRPLEVM_TESTNET]: "0x3f012a7C54dF759B145740454f61A2F2457A3028",
  },
};
