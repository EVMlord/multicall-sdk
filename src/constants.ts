/** All supported chain IDs */
export enum ChainId {
  MAINNET = 1,
  ROPSTEN = 3,
  RINKEBY = 4,
  GÖRLI = 5,
  KOVAN = 42,
  BASE = 8453,
  POLYGON = 137,
  POLYGON_TESTNET = 80001,
  POLYGON_ZKEVM = 1101,
  FANTOM_TESTNET = 4002,
  BNB_SMART_CHAIN = 56,
  BNB_SMART_CHAIN_TESTNET = 97,
  ARBITRUM = 42161,
  ARBITRUM_TESTNET = 79377087078960,
  MOONBEAM_TESTNET = 1287,
  AVALANCHE = 43114,
  LINEA = 59144,
  SCROLL = 534352,
  CELO = 42220,
  GNOSIS = 100,
  MOONBEAM = 1284,
  HECO = 128,
  HECO_TESTNET = 256,
  HARMONY = 1666600000,
  HARMONY_TESTNET = 1666700000,
  OKEX = 66,
  OKEX_TESTNET = 65,
  CRONOS = 25,
  CRONOS_TESTNET = 338,
  AURORA = 1313161554,
  AURORA_TESTNET = 1313161555,
  AURORA_BETANET = 1313161556,
  MOONRIVER = 1285,
  OPTIMISM = 10,
  XRPLEVM_TESTNET = 1449000,
  MANTLE = 5000,
  KAVA = 2222,
  METIS = 1088,
  ZORA = 7777777,
  MONAD_TESTNET = 10143,
  APECHAIN = 33139,
  OPBNB = 204,
  CORE = 1116,
  AIOZ = 168,
  GRAVITY = 1625,
  LISK = 1135,
  SONIC_NETWORK = 146,

  /** GENERATED by scripts/gen-multicall.ts */

  SEPOLIA = 11155111,
  HOLESKY = 17000,
  STORY = 1514,
  STORY_AENEID_TESTNET = 1315,
  XTERIO_CHAIN = 112358,
  XTERIO_TESTNET = 1637450,
  OPTIMISM_KOVAN = 69,
  OPTIMISM_GÖRLI = 420,
  OPTIMISM_SEPOLIA = 11155420,
  ARBITRUM_NOVA = 42170,
  ARBITRUM_GÖRLI = 421613,
  ARBITRUM_SEPOLIA = 421614,
  ARBITRUM_RINKEBY = 421611,
  STYLUS_TESTNET = 23011913,
  AMOY = 80002,
  POLYGON_ZKEVM_TESTNET = 1442,
  CARDONA_ZKEVM_TESTNET = 2442,
  CHIADO = 10200,
  AVALANCHE_FUJI = 43113,
  FANTOM_OPERA = 250,
  FANTOM_SONIC = 64240,
  OPBNB_TESTNET = 5611,
  PALM = 11297108109,
  PALM_TESTNET = 11297108099,
  REYA_CRONOS = 89346162,
  REYA_NETWORK = 1729,
  FUSE = 122,
  FLARE_MAINNET = 14,
  SONGBIRD_CANARY_NETWORK = 19,
  COSTON_TESTNET = 16,
  COSTON2_TESTNET = 114,
  BOBA = 288,
  ASTAR = 592,
  ASTAR_ZKYOTO_TESTNET = 6038361,
  ASTAR_ZKEVM = 3776,
  METIS_GOERLI = 599,
  METIS_SEPOLIA = 59902,
  OVER_PROTOCOL = 54176,
  OVER_PROTOCOL_DOLPHIN_TESTNET = 541764,
  RSK = 30,
  RSK_TESTNET = 31,
  EVMOS = 9001,
  EVMOS_TESTNET = 9000,
  THUNDERCORE = 108,
  THUNDERCORE_TESTNET = 18,
  OASIS = 42262,
  OASIS_SAPPHIRE = 23294,
  CELO_ALFAJORES_TESTNET = 44787,
  GODWOKEN = 71402,
  GODWOKEN_TESTNET = 71401,
  KLAYTN = 8217,
  KLAYTN_TESTNET = 1001,
  MILKOMEDA = 2001,
  KCC = 321,
  VELAS = 106,
  TELOS = 40,
  STEP_NETWORK = 1234,
  CANTO = 7700,
  CANTO_TESTNET = 7701,
  IOTEX = 4689,
  BITGERT = 32520,
  MANTLE_SEPOLIA_TESTNET = 5003,
  MANTLE_TESTNET = 5001,
  SHARDEUM_SPHINX = 8082,
  BASE_TESTNET = 84531,
  BASE_TESTNET_2 = 84532,
  KROMA_TESTNET = 2358,
  KROMA = 255,
  DEFICHAIN_EVM_MAINNET = 1130,
  DEFICHAIN_EVM_TESTNET = 1131,
  DEFI_ORACLE_META_MAINNET = 138,
  DFK_CHAIN_TEST = 335,
  DFK_CHAIN = 53935,
  NEON_EVM_DEVNET = 245022926,
  LINEA_SEPOLIA_TESTNET = 59141,
  LINEA_GOERLI_TESTNET = 59140,
  HASHBIT = 11119,
  SYSCOIN = 57,
  SYSCOIN_ROLLUX_MAINNET = 570,
  SYSCOIN_TANNEBAUM_TESTNET = 5700,
  SYSCOIN_TANNEBAUM_ROLLUX = 57000,
  PULSECHAIN_V4_TESTNET = 943,
  PULSECHAIN = 369,
  ZORA_SEPOLIA_TESTNET = 999999999,
  DARWINIA_CRAB_NETWORK = 44,
  DARWINIA_NETWORK = 46,
  CHAIN_VERSE_MAINNET = 5555,
  SCROLL_ALPHA_TESTNET = 534353,
  SCROLL_SEPOLIA_TESTNET = 534351,
  XODEX = 2415,
  EOS_EVM_TESTNET = 15557,
  EOS_EVM = 17777,
  CROSSBELL = 3737,
  DOGECHAIN = 2000,
  MEVERSE_CHAIN_TESTNET = 4759,
  MEVERSE_CHAIN_MAINNET = 7518,
  SKALE_CALYPSO_TESTNET = 974399131,
  SKALE_EUROPA_TESTNET = 1444673419,
  SKALE_NEBULA_TESTNET = 37084624,
  SKALE_TITAN_TESTNET = 1020352220,
  SKALE_CALYPSO_HUB = 1564830818,
  SKALE_EUROPA_LIQUIDITY_HUB = 2046399126,
  SKALE_NEBULA_GAMING_HUB = 1482601649,
  SKALE_TITAN_AI_HUB = 1350216234,
  RONIN_MAINNET = 2020,
  QITMEER_TESTNET = 8131,
  QITMEER_QNG_MAINNET = 813,
  Q_TESTNET = 35443,
  Q_DEVNET = 35442,
  Q_MAINNET = 35441,
  NEON_MAINNET = 245022934,
  LUKSO_TESTNET = 4201,
  EDGEWARE_EDGEEVM = 2021,
  METER_TESTNET = 83,
  METER = 82,
  SEPOLIA_PGN_TESTNET = 58008,
  PGN = 424,
  SHIMMEREVM = 148,
  HIGHBURY_EVM = 710,
  ARTHERA_TESTNET = 10243,
  ARTHERA_MAINNET = 10242,
  MANTA_PACIFIC_MAINNET = 169,
  JOLNIR = 167007,
  KATLA = 167008,
  FILECOIN_MAINNET = 314,
  FILECOIN_CALIBRATION_TESTNET = 314159,
  FUSION = 32659,
  FUSION_TESTNET = 46688,
  XAI_TESTNET = 47279324479,
  JFIN_CHAIN = 3501,
  JFIN_CHAIN_TESTNET = 3502,
  CHILIZ_CHAIN = 88888,
  CHILIZ_SPICY_TESTNET = 88882,
  CORE_TESTNET = 1115,
  CORE_TESTNET2 = 1114,
  ETHEREUM_CLASSIC = 61,
  FRAME_TESTNET = 68840142,
  ETHERLINK_MAINNET = 42793,
  ETHERLINK_TESTNET = 128123,
  ZETACHAIN_ATHENS_3_TESTNET = 7001,
  ZETACHAIN = 7000,
  X1_TESTNET = 195,
  LUMITERRA_LAYER3 = 94168,
  BITTORRENT_CHAIN_MAINNET = 199,
  CALLISTO_MAINNET = 820,
  AREON_NETWORK_TESTNET = 462,
  AREON_NETWORK_MAINNET = 463,
  ZKFAIR_MAINNET = 42766,
  MODE_MAINNET = 34443,
  BLAST_SEPOLIA = 168587773,
  BLAST = 81457,
  XAI = 660279,
  DOS_CHAIN = 7979,
  DOS_CHAIN_TESTNET = 3939,
  TRON = 728126428,
  ZKSYNC_ERA = 324,
  ZKSYNC_ERA_GOERLI_TESTNET = 280,
  ZKSYNC_ERA_SEPOLIA_TESTNET = 300,
  PLAYFI_ALBIREO_TESTNET = 1612127,
  ABSTRACT_TESTNET = 11124,
  ABSTRACT_MAINNET = 2741,
  FRAXTAL_MAINNET = 252,
  FRAXTAL_HOLESKY_TESTNET = 2522,
  OMAX_MAINNET = 311,
  SYNDICATE_FRAME_CHAIN = 5101,
  DELA_SEPOLIA = 9393,
  NEOX_TESTNET = 12227330,
  SANKO_MAINNET = 1996,
  SANKO_TESTNET = 1992,
  BERACHAIN_MAINNET = 80094,
  BERACHAIN_BEPOLIA_TESTNET = 80069,
  SHIBARIUM = 109,
  IMMUTABLE_ZKEVM_MAINNET = 13371,
  IMMUTABLE_ZKEVM_TESTNET = 13473,
  RSS3_VSL_MAINNET = 12553,
  RSS3_VSL_SEPOLIA_TESTNET = 2331,
  MORPH_SEPOLIA_TESTNET = 2710,
  MORPH_HOLESKY_TESTNET = 2810,
  MORPH = 2818,
  JIBCHAIN_L1 = 8899,
  HAQQ_MAINNET = 11235,
  ZIRCUIT_SEPOLIA_TESTNET = 48899,
  RE_AL = 111188,
  MERLIN_TESTNET = 686868,
  IOTA_EVM = 8822,
  PLANQ = 7070,
  CYBER_TESTNET = 111557560,
  UNIT_ZERO_MAINNET = 88811,
  UNIT_ZERO_STAGENET = 88819,
  UNIT_ZERO_TESTNET = 88817,
  SEI_EVM_DEVNET = 713715,
  SEI_EVM_MAINNET = 1329,
  HEKLA = 167009,
  TAIKO_MAINNET = 167000,
  CYBER_MAINNET = 7560,
  DREYERX_MAINNET = 23451,
  SAHARA_TESTNET = 313313,
  BOX_CHAIN = 42299,
  OX_CHAIN = 6699,
  CONFLUX_ESPACE = 1030,
  BEVM_TESTNET = 11503,
  AURA_MAINNET = 6322,
  SUPERPOSITION_TESTNET = 98985,
  X_LAYER_MAINNET = 196,
  NAHMII_3_MAINNET = 4061,
  NAHMII_3_TESTNET = 4062,
  PLUME_TESTNET = 98867,
  PLUME_MAINNET = 98866,
  ALGEN_L1 = 8911,
  BITLAYER_MAINNET = 200901,
  YOMINET = 5264468217,
  BOB = 60808,
  SUPERSEED = 53302,
  RUPAYA = 499,
  FLUENCE_TESTNET = 52164803,
  FLUENCE_STAGE = 123420000220,
  FLUENCE = 9999999,
  CAMP_TESTNET_V2 = 325000,
  ONTOLOGY_TESTNET = 5851,
  ONTOLOGY_MAINNET = 58,
  VICTION_TESTNET = 89,
  VICTION_MAINNET = 88,
  WORLD_CHAIN = 480,
  FLOW_MAINNET = 747,
  FLOW_TESTNET = 545,
  CONFLUX_CORE_SPACE_MAINNET = 1029,
  SUPERPOSITION = 55244,
  STARCHAIN_TESTNET = 1570,
  STARCHAIN_MAINNET = 1578,
  WEMIX_3_0_MAINNET = 1111,
  ALEPH_ZERO_EVM_MAINNET = 41455,
  EDUCHAIN_TESTNET = 656476,
  FORM_TESTNET = 132902,
  PEAQ = 3338,
  HYPEREVM = 999,
  POWERLOOM_MAINNET = 7869,
  HOODI = 560048,
  MEGAETH_TESTNET = 6342,
  INK_SEPOLIA = 763373,
  INK = 57073,
  BITTENSOR = 964,
  WHITECHAIN = 1875,
  TANGLE_TESTNET = 3799,
  TANGLE_MAINNET = 8545,
}

/**
 * Map exactly the values in ChainId to on-chain contract addresses.
 *
 * We use Partial<> here because we may not deploy a given contract on every network.
 */
type AddressType = Partial<Record<ChainId, string>>;

/** canonical Multicall3 address */
const DEFAULT_MULTICALL3_ADDRESS =
  "0xcA11bde05977b3631167028862bE2a173976CA11" as const;

/** Networks where ONLY the canonical address is deployed     */
const UNIFIED_CHAINS: readonly ChainId[] = [
  1, 42, 4, 5, 3, 11155111, 17000, 1514, 1315, 112358, 1637450, 10, 69, 420,
  11155420, 42161, 42170, 421613, 421614, 421611, 23011913, 137, 80001, 80002,
  1101, 1442, 2442, 100, 10200, 43114, 43113, 4002, 250, 64240, 146, 56, 97,
  5611, 204, 1284, 1285, 1287, 11297108109, 11297108099, 1666600000, 25, 338,
  89346162, 1729, 122, 14, 19, 16, 114, 288, 1313161554, 592, 6038361, 3776, 66,
  128, 1088, 599, 59902, 54176, 541764, 30, 31, 9001, 9000, 108, 18, 42262,
  23294, 42220, 44787, 71402, 71401, 8217, 1001, 2001, 321, 106, 40, 1234, 7700,
  7701, 4689, 32520, 2222, 5003, 5001, 5000, 8082, 84531, 84532, 8453, 2358,
  255, 1130, 1131, 138, 335, 53935, 245022926, 59141, 59140, 59144, 11119, 57,
  570, 5700, 57000, 943, 369, 999, 7777777, 999999999, 44, 46, 5555, 534353,
  534351, 534352, 2415, 15557, 17777, 3737, 2000, 4759, 7518, 974399131,
  1444673419, 37084624, 1020352220, 1564830818, 2046399126, 1482601649,
  1350216234, 2020, 8131, 813, 35443, 35442, 35441, 245022934, 4201, 2021, 83,
  82, 58008, 424, 148, 710, 10243, 10242, 169, 167007, 167008, 314, 314159,
  32659, 46688, 47279324479, 3501, 3502, 88888, 88882, 1116, 1115, 1114, 61,
  68840142, 42793, 128123, 7001, 7000, 195, 94168, 199, 1029, 820, 462, 463,
  42766, 34443, 168587773, 81457, 660279, 7979, 3939, 252, 2522, 311, 5101,
  9393, 12227330, 1996, 1992, 80094, 80069, 109, 13371, 13473, 12553, 2331,
  2710, 2810, 2818, 8899, 11235, 48899, 111188, 686868, 8822, 7070, 111557560,
  88811, 88819, 88817, 713715, 1329, 167009, 167000, 7560, 23451, 313313, 42299,
  6699, 1030, 11503, 6322, 98985, 196, 4061, 4062, 98867, 98866, 8911, 200901,
  1135, 1625, 5264468217, 60808, 53302, 499, 52164803, 123420000220, 9999999,
  325000, 5851, 58, 89, 88, 480, 747, 545, 55244, 1570, 1578, 33139, 1111,
  41455, 656476, 132902, 3338, 10143, 7869, 560048, 6342, 763373, 57073, 964,
  1875, 3799, 8545,
] as const;

/** Custom one-offs and legacy deployments                  */
const CUSTOM_MULTICALL: AddressType = {
  // Mainnets
  [ChainId.MAINNET]: "0x2c7002B316507F228BC6E10855856Ba93114EbB8",
  [ChainId.BNB_SMART_CHAIN]: "0x134f94adA24A7ed01AF204D72e7FcFf97E5538da",
  [ChainId.ARBITRUM]: "0x2697B961c5504190502533b69177f3912d3D450B",
  [ChainId.POLYGON]: "0x5bE2bE1DFC48935FDA90C6A84D67089896F49aed",
  [ChainId.OPTIMISM]: "0x9E4096d2CE10C37288dEEa27f779774F9C4Cb15B",
  [ChainId.BASE]: "0xc80CA59256a07f72e2CF8d16Ddc11629B34e0820",
  [ChainId.AVALANCHE]: "0x82049c5eB881856909d084BE3edB5AFEaD9d2ebe",
  [ChainId.ZKSYNC_ERA]: "0x3A3CD02b704bB1A54dd37170b75708cAAFeD5Af0",
  [ChainId.LINEA]: "0xB77E3Cb8b2441C53A306bE3220633BBd4d168710",
  [ChainId.SCROLL]: "0x51a60977d4E88843086B85118e0f8673b985EBAF",
  [ChainId.MANTLE]: "0x00D5fB018BC973f4D7b4B46E06CF834D6105ba0e",
  [ChainId.APECHAIN]: "0x354Fe27D768744D4AA74E39aec4B93135Fd6278C",
  [ChainId.METIS]: "0x1f88Aec1f343569e3a041dA875c41d9839DbEcf9",
  [ChainId.ZORA]: "0xA7f3d2dEa7a53E7A9FEbBdE5Cf7C69d39D065030",
  [ChainId.KAVA]: "0x9ecb8f928c49c24922290EB433F285df0766f623",
  [ChainId.CRONOS]: "0x226A09E64e41CB24d0B0dFBeB6DcBb930E6E1eC7",
  [ChainId.OPBNB]: "0x52AE8dfcaa1b918D849f470AA6F208BF621eEf8c",
  [ChainId.CORE]: "0x58bf0BC53Df83D493da0289fC4d7044885516E4B",
  [ChainId.AIOZ]: "0x1BD8CD51e9E0fA901e3E568534382148665a7145",
  [ChainId.GRAVITY]: "0x00D5fB018BC973f4D7b4B46E06CF834D6105ba0e",
  [ChainId.LISK]: "0x226A09E64e41CB24d0B0dFBeB6DcBb930E6E1eC7",
  [ChainId.SONIC_NETWORK]: "0x1BD8CD51e9E0fA901e3E568534382148665a7145",

  // Testnets
  [ChainId.BNB_SMART_CHAIN_TESTNET]:
    "0x06084aF049CA61B1FC7E65a95dB09695E4014d5a",
  [ChainId.MONAD_TESTNET]: "0x1BD8CD51e9E0fA901e3E568534382148665a7145",
  [ChainId.XRPLEVM_TESTNET]: "0x3f012a7C54dF759B145740454f61A2F2457A3028",

  /** GENERATED by scripts/gen-multicall.ts */

  "280": "0xf9cda624fbc7e059355ce98a31693d299facd963",
  "300": "0xf9cda624fbc7e059355ce98a31693d299facd963",
  "1029": "cfx:acevn2d3dr6vh4jca28c6cmvkktsg7r8n25vp9hnmw",
  "2741": "0xf9cda624fbc7e059355ce98a31693d299facd963",
  "11124": "0xf9cda624fbc7e059355ce98a31693d299facd963",
  "1612127": "0xf9cda624fbc7e059355ce98a31693d299facd963",
  "728126428": "teazpvzwdjdtfejupyo7qunvnrnujph8ed",
};

/** Auto-generate the “unified” part of the map */
const FALLBACK_MULTICALL = UNIFIED_CHAINS.reduce<AddressType>((m, id) => {
  m[id] = DEFAULT_MULTICALL3_ADDRESS;
  return m;
}, {});

/** The final object that callers will import */
const Multicall: AddressType = {
  ...FALLBACK_MULTICALL, // defaults
  ...CUSTOM_MULTICALL, // overrides win
};

export const getMulticallAddress = (chain: ChainId): String | undefined =>
  Multicall[chain];

export const addresses = {
  Multicall, // now includes **all** supported chains
};

export enum VERSION {
  V1,
}
