# Auto‑generate a GitHub Release with compiled artefacts whenever a version tag is pushed
# --------------------------------------------------------------
# • Push `v1.2.3`  -> workflow creates a Release with autogenerated notes
# • Works for SemVer, semver‑with‑prerelease (v1.2.3-beta.1) and RC tags
# • NPM publish step included; comment if you don't want registry automation

name: Release

on:
  push:
    tags:
      - "v*.*.*" # v1.2.3, v2.0.0
      - "v*.*.*-*" # v1.2.3-beta.1, v2.0.0-rc.0

permissions:
  contents: write # required to create releases / attach assets

jobs:
  github-release:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Check out source
        uses: actions/checkout@v4

      - name: 🛠️  Set up Node.js + Yarn cache
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"
          cache: "yarn"
          cache-dependency-path: "yarn.lock"

      - name: 📦 Install dependencies & build dist
        run: |
          corepack enable
          yarn install --frozen-lockfile
          yarn build

      # archive dist into a single zip (helpful for big artefacts)
      - name: 🗜️  Zip dist folder
        run: zip -r dist.zip dist

      - name: 📤 Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "Publishing to npm…"
          if [[ "${{ contains(github.ref_name, '-') }}" == "true" ]]; then
            npm publish --access public --tag beta
          else
            npm publish --access public 
          fi

      - name: 🚀 Create / update GitHub Release and attach artefacts
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }} # e.g. v1.2.3
          draft: false
          prerelease: ${{ contains(github.ref_name, '-') }}
          generateReleaseNotes: true # GitHub auto‑notes
          artifacts: |
            dist.zip
